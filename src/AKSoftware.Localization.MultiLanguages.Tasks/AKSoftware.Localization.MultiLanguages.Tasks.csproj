<Project Sdk="Microsoft.NET.Sdk">

    <PropertyGroup>
        <TargetFramework>netstandard2.0</TargetFramework>
        <version>1.0.0</version>
        <title>AKSoftware.Localization.MultiLanguages.Tasks</title>
        <authors>Ahmad Mozaffar</authors>
        <description>Generates a strongly typed language keys from the YAML language files</description>
        <tags>Localization, MultiLanguage, Multiple Languages, Languages</tags>
        <copyright>Copyright Â© AK Software 2023</copyright>
        <!-- we need the assemblies bundled, so set this so we don't expose any dependencies to the outside world -->
        <GenerateDependencyFile>true</GenerateDependencyFile>
        <TargetsForTfmSpecificBuildOutput>$(TargetsForTfmSpecificBuildOutput);CopyProjectReferencesToPackage</TargetsForTfmSpecificBuildOutput>
        <DebugType>embedded</DebugType>
        <IsPackable>true</IsPackable>
      <GeneratePackageOnBuild>true</GeneratePackageOnBuild>
    </PropertyGroup>

    <ItemGroup>
	     <PackageReference Include="Microsoft.Build.Utilities.Core" Version="17.0.0" PrivateAssets="all" />
	     <PackageReference Include="Microsoft.Extensions.DependencyInjection" Version="6.0.0" PrivateAssets="all" />
    </ItemGroup>

  <ItemGroup>
    <!-- These lines pack the build props/targets files to the `build` folder in the generated package.
         By convention, the .NET SDK will look for build\<Package Id>.props and build\<Package Id>.targets
         for automatic inclusion in the build. -->
    <Content Include="build\AKSoftware.Localization.MultiLanguages.Tasks.props" PackagePath="build\" />
    <Content Include="build\AKSoftware.Localization.MultiLanguages.Tasks.targets" PackagePath="build\" />
  </ItemGroup>
  

    <Target Name="CopyProjectReferencesToPackage" DependsOnTargets="ResolveReferences">
        <ItemGroup>
            <!-- The dependencies of your MSBuild task must be packaged inside the package, they cannot be expressed as normal PackageReferences -->
            <BuildOutputInPackage Include="@(ReferenceCopyLocalPaths)" TargetPath="%(ReferenceCopyLocalPaths.DestinationSubPath)" />
        </ItemGroup>
    </Target>

    <!-- This target adds the generated deps.json file to our package output -->
    <Target Name="AddBuildDependencyFileToBuiltProjectOutputGroupOutput" BeforeTargets="BuiltProjectOutputGroup" Condition=" '$(GenerateDependencyFile)' == 'true'">

       <ItemGroup>
          <BuiltProjectOutputGroupOutput Include="$(ProjectDepsFilePath)" TargetPath="$(ProjectDepsFileName)" FinalOutputPath="$(ProjectDepsFilePath)" />
       </ItemGroup>
    </Target>

</Project>
